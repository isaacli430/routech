@model ProductDetailsModel
@using Nop.Core.Domain.Seo;
@using Nop.Core.Domain.Catalog;
@using Nop.Services.Catalog; 
@inject Nop.Core.IWebHelper webHelper 
@inject SeoSettings seoSettings
@inject IProductService productService; 
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(!string.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    //meta
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    Html.AppendPageCssClassParts("html-product-details-page");

    //canonical URL
    if (seoSettings.CanonicalUrlsEnabled)
    {
        var productUrl = Url.RouteUrl("Product", new { SeName = Model.SeName }, webHelper.CurrentRequestProtocol).ToLowerInvariant();
        Html.AddCanonicalUrlParts(productUrl, seoSettings.QueryStringInCanonicalUrlsEnabled);
    }

    //open graph META tags
    if (seoSettings.OpenGraphMetaTags)
    {
        Html.AddHeadCustomParts("<meta property=\"og:type\" content=\"product\" />");
        Html.AddHeadCustomParts("<meta property=\"og:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:description\" content=\"" + Html.Encode(Nop.Core.Html.HtmlHelper.StripTags(Model.MetaDescription)) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:image:url\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:url\" content=\"" + webHelper.GetThisPageUrl(false) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"og:site_name\" content=\"" + Html.Encode(Model.CurrentStoreName) + "\" />");
    }

    //Twitter META tags
    if (seoSettings.TwitterMetaTags)
    {
        Html.AddHeadCustomParts("<meta property=\"twitter:card\" content=\"summary\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:site\" content=\"" + Html.Encode(Model.CurrentStoreName) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:title\" content=\"" + Html.Encode(Model.Name) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:description\" content=\"" + Html.Encode(Nop.Core.Html.HtmlHelper.StripTags(Model.MetaDescription)) + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:image\" content=\"" + Model.DefaultPictureModel.ImageUrl + "\" />");
        Html.AddHeadCustomParts("<meta property=\"twitter:url\" content=\"" + webHelper.GetThisPageUrl(false) + "\" />");
    }

    Product fullProduct = productService.GetProductById(Model.Id);
}
<!--product breadcrumb-->
@section Breadcrumb
            {
                @await Html.PartialAsync("_ProductBreadcrumb", Model.Breadcrumb)
}
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsAfterBreadcrumb, additionalData = Model })
<div class="page product-details-page">
    <div class="page-body">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsTop, additionalData = Model })
        <form asp-route="Product" asp-route-sename="@Model.SeName" method="post" id="product-details-form">
            @if (seoSettings.MicrodataEnabled)
            {
        @await Html.PartialAsync("_Microdata", Model)
            }
            <div data-productid="@Model.Id">
                <div class="product-essential">
                    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsEssentialTop, additionalData = Model })
                    <!--product pictures-->
                    @*@await Html.PartialAsync("_ProductDetailsPictures", Model)*@
                    <div class="row">
                        <div class="left-column">
                            <div class="panel">
                                <div class="panel-heading">
                                    <h1 class="panel-title">
                                        @Model.ManufacturerPartNumber
                                    </h1>
                                </div>
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-xs-4 picture-column" style="display: inline-block;">
                                            <img src="@Model.DefaultPictureModel.ImageUrl" width="150px" />
                                        </div>
                                        <div class="col-xs-8 bs-vert-line-sm-up description-column" style="float: right;">
                                            <span class="hidden-xs hidden-sm hidden-md hidden-lg full-underline"></span>
                                            <div class="row">
                                                <div class="col-xs-4 padding">
                                                    <span class="description-label">Routech No.:</span>
                                                </div>
                                                <div class="col-xs-8 padding">
                                                    <span class="description-description">@Model.Name</span>
                                                </div>
                                            </div>
                                            <div class="row border-top">
                                                <div class="col-xs-4 padding">
                                                    <span class="description-label">Mfr No.:</span>
                                                </div>
                                                <div class="col-xs-8 padding">
                                                    <span class="description-description">@Model.ManufacturerPartNumber</span>
                                                </div>
                                            </div>
                                            <div class="row border-top">
                                                <div class="col-xs-4 padding">
                                                    <span class="description-label">Unit Of Msr.:</span>
                                                </div>
                                                <div class="col-xs-8 padding">
                                                    <span class="description-description">@Model.ShortDescription</span>
                                                </div>
                                            </div>
                                            <div class="row border-top">
                                                <div class="col-xs-4 padding">
                                                    <span class="description-label">Manufacturer:</span>
                                                </div>
                                                <div class="col-xs-8 padding">
                                                    @if (@Model.ProductManufacturers.Count > 0)
                                                    {
                                                        <span class="description-description">@Model.ProductManufacturers[0].Name</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="description-description">N/A</span>
                                                    }
                                                </div>
                                            </div>
                                            <div class="row border-top">
                                                <div class="col-xs-4 padding">
                                                    <span class="description-label">Description:</span>
                                                </div>
                                                <div class="col-xs-8 padding">
                                                    <span class="description-description">@Html.Raw(Model.FullDescription)</span>
                                                </div>
                                            </div>
                                            @if (fullProduct.MarkAsNew)
                                            {
                                                <div class="row border-top">
                                                    <div class="col-xs-4 padding">
                                                        <span class="description-label">Lifecycle</span>
                                                    </div>
                                                    <div class="col-xs-8 padding">
                                                        <span class="description-description">New from Routech</span>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="panel">
                                <div class="panel-heading">
                                    <h1 class="panel-title">
                                        Specifications
                                    </h1>
                                </div>
                                <div class="panel-body">
                                    <span class="hidden-xs hidden-sm hidden-md hidden-lg full-underline"></span>
                                    <div class="pricing-column">
                                        <div class="row table-heading">
                                            <div class="col-xs-4 padding">
                                                <span class="description-label">Product Attribute</span>
                                            </div>
                                            <div class="col-xs-8 padding">
                                                <span class="description-label">Attribute Value</span>
                                            </div>
                                        </div>
                                        @foreach (ProductSpecificationModel specification in Model.ProductSpecifications)
                                        {
                                            <div class="row border-top">
                                                <div class="col-xs-4 padding">
                                                    <span class="description-label">@specification.SpecificationAttributeName:</span>
                                                </div>
                                                <div class="col-xs-8 padding">
                                                    <span class="description-description">@Html.Raw(specification.ValueRaw)</span>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="right-column" style="float: right;">
                            <div class="panel">
                                <div class="panel-heading">
                                    @if (fullProduct.StockQuantity > 0)
                                    {
                                        <h1 class="panel-title">
                                            In Stock: @fullProduct.StockQuantity
                                        </h1>
                                    }
                                    else
                                    {
                                        <h1 class="panel-title">
                                            Availability
                                        </h1>
                                    }
                                </div>
                                <div>
                                    <div class="pricing-column">
                                        <span class="hidden-xs hidden-sm hidden-md hidden-lg full-underline"></span>
                                        <div class="row">
                                            <div class="col-xs-4 padding">
                                                <span class="description-label">In Stock:</span>
                                            </div>
                                            <div class="col-xs-8 padding">
                                                @if (fullProduct.StockQuantity > 0)
                                                {
                                                    <span class="description-description">@fullProduct.StockQuantity available now</span>
                                                }
                                                else
                                                {
                                                    <span class="description-description">Non-stocked</span>
                                                }
                                            </div>
                                        </div>
                                        <div class="row border-top">
                                            <div class="col-xs-4 padding">
                                                <span class="description-label">Pricing:</span>
                                            </div>
                                            <div class="col-xs-8 padding">
                                                <span class="description-description">@Model.ProductPrice.Price</span>
                                            </div>
                                        </div>
                                        <div class="row border-top">
                                            <div class="col-xs-4 padding">
                                                <span class="description-label">Minimum:</span>
                                            </div>
                                            <div class="col-xs-8 padding">
                                                <span class="description-description">@fullProduct.OrderMinimumQuantity</span>
                                            </div>
                                        </div>
                                        <div class="row border-top">
                                            <div class="col-xs-4 padding">
                                                <span class="description-label">Maximum:</span>
                                            </div>
                                            <div class="col-xs-8 padding">
                                                <span class="description-description">@fullProduct.OrderMaximumQuantity</span>
                                            </div>
                                        </div>
                                        <div class="row border-top">
                                            <div class="col-xs-4 padding">
                                                <span class="description-label"><br />Enter Quantity:</span>
                                            </div>
                                            <div class="col-xs-8 padding">
                                                <span class="description-description">
                                                    @{
                                                        var dataDictAddToCart = new ViewDataDictionary(ViewData);
                                                        dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = $"addtocart_{Model.Id}";
                                                        @await Html.PartialAsync("_AddToCart", Model.AddToCart, dataDictAddToCart)
                                                    }
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    @*<div class="overview">*@

                    @*@await Html.PartialAsync("_Discontinued", Model)
        <div class="product-name">
            <h1>
                @Model.Name
            </h1>
        </div>
        <h3 class="full-description">
            @Html.Raw(Model.FullDescription)
        </h3>
        <div class="short-description">
            Unit of Measurement: @Html.Raw(Model.ShortDescription)
        </div>
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsOverviewTop, additionalData = Model })*@
                    <!--product reviews-->
                    @*@await Html.PartialAsync("_ProductReviewOverview", Model.ProductReviewOverview)*@
                    <!--manufacturers-->
                    @*@await Html.PartialAsync("_ProductManufacturers", Model.ProductManufacturers)*@
                    <!--availability-->
                    @*@await Html.PartialAsync("_Availability", Model)*@
                    <!--SKU, MAN, GTIN, vendor-->
                    @*@await Html.PartialAsync("_SKU_Man_GTIN_Ven", Model)*@
                    <!--delivery-->
                    @*@await Html.PartialAsync("_DeliveryInfo", Model)*@
                    <!--sample download-->
                    @*@await Html.PartialAsync("_DownloadSample", Model)*@
                    <!--attributes-->
                    @*@{
            var dataDictAttributes = new ViewDataDictionary(ViewData);
            dataDictAttributes.TemplateInfo.HtmlFieldPrefix = $"attributes_{Model.Id}";
            @await Html.PartialAsync("_ProductAttributes", Model.ProductAttributes, dataDictAttributes)
        }*@
                    <!--gift card-->
                    @*@{
            var dataDictGiftCard = new ViewDataDictionary(ViewData);
            dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = $"giftcard_{Model.Id}";
            @await Html.PartialAsync("_GiftCardInfo", Model.GiftCard, dataDictGiftCard)
        }*@
                    <!--rental info-->
                    @*@{
            var dataDictRental = new ViewDataDictionary(ViewData);
            dataDictRental.TemplateInfo.HtmlFieldPrefix = $"rental_{Model.Id}";
            @await Html.PartialAsync("_RentalInfo", Model, dataDictRental)
        }*@
                    <!--price & add to cart & estimate shipping-->
                    @*@{
            var dataDictPrice = new ViewDataDictionary(ViewData);
            dataDictPrice.TemplateInfo.HtmlFieldPrefix = $"price_{Model.Id}";
            @await Html.PartialAsync("_ProductPrice", Model.ProductPrice, dataDictPrice)

            @await Html.PartialAsync("_ProductTierPrices", Model.TierPrices)

            var dataDictAddToCart = new ViewDataDictionary(ViewData);
            dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = $"addtocart_{Model.Id}";
            @await Html.PartialAsync("_AddToCart", Model.AddToCart, dataDictAddToCart)

            @await Html.PartialAsync("_ProductEstimateShipping", Model.ProductEstimateShipping)
        }*@
                    <!--wishlist, compare, email a friend-->
                    @*<div class="overview-buttons">
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsInsideOverviewButtonsBefore, additionalData = Model })
            @{
                var dataDictAddToWishlist = new ViewDataDictionary(ViewData);
                dataDictAddToWishlist.TemplateInfo.HtmlFieldPrefix = $"addtocart_{Model.Id}";
                @await Html.PartialAsync("_AddToWishlist", Model.AddToCart, dataDictAddToWishlist)
            }
            @await Html.PartialAsync("_CompareProductsButton", Model)
            @await Html.PartialAsync("_ProductEmailAFriendButton", Model)
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsInsideOverviewButtonsAfter, additionalData = Model })
        </div>
        @await Html.PartialAsync("_ShareButton", Model)
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsOverviewBottom, additionalData = Model })*@
                    @*</div>*@
                    @*@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsEssentialBottom, additionalData = Model })*@
                </div>
                @*@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsBeforeCollateral, additionalData = Model })*@
                <div class="product-collateral">
                    @*@await Html.PartialAsync("_ProductSpecifications", Model.ProductSpecifications)
                    @await Html.PartialAsync("_ProductTags", Model.ProductTags)*@
                </div>
                @*@await Component.InvokeAsync("ProductsAlsoPurchased", new { productId = Model.Id })
                @await Component.InvokeAsync("RelatedProducts", new { productId = Model.Id })*@
            </div>
        </form>
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsBottom, additionalData = Model })
    </div>
</div>